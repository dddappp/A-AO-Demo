valueObjects:
  InventoryItemId:
    properties:
      ProductId:
        type: number
      Location:
        type: string
      InventoryAttributeSet:
        type: InventoryAttributeSet
  InventoryAttributeSet:
    properties:
      Foo:
        type: string
      Bar:
        type: string


aggregates:
  Article:
    metadata:
      Preprocessors: [ "CRUD_IT" ]
      CRUD_IT_NO_UPDATE: true
      CRUD_IT_NO_DELETE: true
    id:
      name: ArticleId
      type: number
      generator:
        class: sequence
        structName: ArticleIdSequence
    properties:
      Title:
        type: string
      Body:
        type: string
      Owner:
        type: string
    methods:
      UpdateBody:
        metadata:
          MessagingCommandName: "UpdateArticleBody"
        parameters:
          Body:
            type: string
        event:
          name: "ArticleBodyUpdated"
  
  InventoryItem:
    id:
      name: InventoryItemId
      type: InventoryItemId
    properties:
      Quantity:
        type: number
    methods:
      AddInventoryItemEntry:
        shouldCreateOnDemand: true
        metadata:
          MessagingCommandName: "AddInventoryItemEntry"
        parameters:
          MovementQuantity:
            type: number
        event:
          name: "InventoryItemEntryAdded"

services:
  InOutService:
    abstract: true
    methods:
      CreateSingleLineInOut:
        metadata:
          MessagingCommandName: "CreateSingleLineInOut"
        parameters:
          ProductId:
            type: number
          Location:
            type: string
          MovementQuantity:
            type: number
        result:
          type: CreateSingleLineInOutResult
      CompleteInOut:
        metadata:
          MessagingCommandName: "CompleteInOut"
        parameters:
          InOutId:
            type: number
          Version:
            type: number
      VoidInOut:
        metadata:
          MessagingCommandName: "VoidInOut"
        parameters:
          InOutId:
            type: number
          Version:
            type: number
    valueObjects:
      CreateSingleLineInOutResult:
        properties:
          InOutId:
            type: number
          Version:
            type: number

  InventoryService:
    requiredComponents:
      InventoryItem: # Rename to InventoryItemService?
        type: InventoryItem # Aggregate name
      InOut:
        type: InOutService
    methods:
      ProcessInventorySurplusOrShortage:        
        parameters:
          ProductId:
            type: number
          Location:
            type: string
          Quantity:
            type: number
        steps:
          # StartWithLocalCall:
          #   invokeLocal: ""
          #   withCompensation: ""
          GetInventoryItem:
            prepareRequest:
              Lua: "-- TODO"
            invokeParticipant: "InventoryItem.GetInventoryItem"
            onReply:
              Lua: "-- TODO"
          CreateSingleLineInOut:
            invokeParticipant: "InOut.CreateSingleLineInOut"
            exportVariables:
              # -- Export result variables into context
              InOutId:
                extractionPath: ".InOutId"
              InOutVersion:
                extractionPath: ".Version"
            withCompensation: "InOut.VoidInOut"
            compensationArguments:
              InOutId: "InOutId"
              Version: "InOutVersion"
          DoSomethingLocally:
            invokeLocal: "" # default function name
            withCompensation: "" # default compensation function name
          AddInventoryItemEntry:
            invokeParticipant: "InventoryItem.AddInventoryItemEntry"
            arguments:
              Version: "ItemVersion"
          DoSomethingElseLocally:
            invokeLocal: ""
            withCompensation: ""
          CompleteInOut:
            invokeParticipant: "InOut.CompleteInOut"
            arguments:
              InOutId: "InOutId"
              Version: "InOutVersion"
          ReturnResult:
            # Use an Expression to return the result
            expression:
              Lua: "{ in_out_id = context.in_out_id }"
 