import { BareItem, Dictionary, DictionaryObject, InnerList, Item, List, Parameters } from './types.js';
import { Token } from './token.js';
import { DisplayString } from './displaystring.js';
export declare class SerializeError extends Error {
}
export declare function serializeList(input: List): string;
export declare function serializeDictionary(input: Dictionary | DictionaryObject): string;
/**
 * Serialize a Structured Fields Item.
 *
 * An Item is a standalone value like a string, number of date, followed by
 * an optional set of parameters.
 *
 * You can either pass the value in the first argument and parameters in the second, or pass both as a tuple. The later exists for symmetry with parseItem.
 */
export declare function serializeItem(input: Item): string;
export declare function serializeItem(input: BareItem, params?: Parameters): string;
export declare function serializeInnerList(input: InnerList): string;
export declare function serializeBareItem(input: BareItem): string;
export declare function serializeInteger(input: number): string;
export declare function serializeDecimal(input: number): string;
export declare function serializeString(input: string): string;
export declare function serializeDisplayString(input: DisplayString): string;
export declare function serializeBoolean(input: boolean): string;
export declare function serializeByteSequence(input: ArrayBuffer): string;
export declare function serializeToken(input: Token): string;
export declare function serializeDate(input: Date): string;
export declare function serializeParameters(input: Parameters): string;
export declare function serializeKey(input: string): string;
