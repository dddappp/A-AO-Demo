-- <autogenerated>
--   This file was generated by dddappp code generator.
--   Any changes made to this file manually will be lost next time the file is regenerated.
-- </autogenerated>


SagaInstances = SagaInstances and (
    function(old_data)
        -- May need to migrate old data
        return old_data
    end
)(SagaInstances) or {}

SagaIdSequence = SagaIdSequence and (
    function(old_data)
        -- May need to migrate old data
        return old_data
    end
)(SagaIdSequence) or { 0 }


local json = require("json")
local entity_coll = require("entity_coll")
local messaging = require("messaging")
local saga = require("saga")
local inventory_service = require("inventory_service")

saga.init(SagaInstances, SagaIdSequence)



Handlers.add(
    "get_sage_instance",
    Handlers.utils.hasMatchingTag("Action", "GetSagaInstance"),
    function(msg, env, response)
        local cmd = json.decode(msg.Data)
        local saga_id = cmd.saga_id
        local s = entity_coll.get(SagaInstances, saga_id)
        if msg.reply then
            msg.reply(s)
        else
            Send({Target = msg.From, Data = json.encode(s)})
        end
    end
)


Handlers.add(
    "get_sage_id_sequence",
    Handlers.utils.hasMatchingTag("Action", "GetSagaIdSequence"),
    function(msg, env, response)
        if msg.reply then
            msg.reply(SagaIdSequence)
        else
            Send({Target = msg.From, Data = json.encode(SagaIdSequence)})
        end
    end
)


Handlers.add(
    "inventory_service_process_inventory_surplus_or_shortage",
    Handlers.utils.hasMatchingTag("Action", inventory_service.ACTIONS.PROCESS_INVENTORY_SURPLUS_OR_SHORTAGE),
    inventory_service.process_inventory_surplus_or_shortage
)

Handlers.add(
    "inventory_service_process_inventory_surplus_or_shortage_get_inventory_item_callback",
    Handlers.utils.hasMatchingTag("Action",
        inventory_service.ACTIONS.PROCESS_INVENTORY_SURPLUS_OR_SHORTAGE_GET_INVENTORY_ITEM_CALLBACK),
    inventory_service.process_inventory_surplus_or_shortage_get_inventory_item_callback
)

Handlers.add(
    "inventory_service_process_inventory_surplus_or_shortage_create_single_line_in_out_callback",
    Handlers.utils.hasMatchingTag("Action",
        inventory_service.ACTIONS.PROCESS_INVENTORY_SURPLUS_OR_SHORTAGE_CREATE_SINGLE_LINE_IN_OUT_CALLBACK),
    inventory_service.process_inventory_surplus_or_shortage_create_single_line_in_out_callback
)

Handlers.add(
    "inventory_service_process_inventory_surplus_or_shortage_create_single_line_in_out_compensation_callback",
    Handlers.utils.hasMatchingTag("Action",
        inventory_service.ACTIONS.PROCESS_INVENTORY_SURPLUS_OR_SHORTAGE_CREATE_SINGLE_LINE_IN_OUT_COMPENSATION_CALLBACK),
    inventory_service.process_inventory_surplus_or_shortage_create_single_line_in_out_compensation_callback
)

Handlers.add(
    "inventory_service_process_inventory_surplus_or_shortage_add_inventory_item_entry_callback",
    Handlers.utils.hasMatchingTag("Action",
        inventory_service.ACTIONS.PROCESS_INVENTORY_SURPLUS_OR_SHORTAGE_ADD_INVENTORY_ITEM_ENTRY_CALLBACK),
    inventory_service.process_inventory_surplus_or_shortage_add_inventory_item_entry_callback
)

Handlers.add(
    "inventory_service_process_inventory_surplus_or_shortage_complete_in_out_callback",
    Handlers.utils.hasMatchingTag("Action",
        inventory_service.ACTIONS.PROCESS_INVENTORY_SURPLUS_OR_SHORTAGE_COMPLETE_IN_OUT_CALLBACK),
    inventory_service.process_inventory_surplus_or_shortage_complete_in_out_callback
)

